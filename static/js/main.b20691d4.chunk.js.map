{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","App.js","index.js"],"names":["TodoItem","item","setTodos","useState","editItem","setEditItem","title","editedTodos","setEditedTodos","deleteTodo","id","todos","filter","todo","handleChangeTitle","map","trim","className","classNames","completed","editing","type","checked","onChange","onDoubleClick","onClick","value","autoFocus","e","target","onKeyDown","key","handleKeyboard","onBlur","TodoList","items","TodosFilter","status","setStatus","FILTERS","href","all","selected","active","App","setTitle","toggledAll","setToggledAll","useEffect","getLocalTodos","setLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","filteredTodos","useMemo","completedTodos","activeTodos","onSubmit","preventDefault","prevTodos","uuidv4","placeholder","length","some","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b20691d4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../../styles/todo-list.css';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({ item, setTodos }) => {\n  const [editItem, setEditItem] = useState(false);\n  const [editedTodos, setEditedTodos] = useState(item.title);\n\n  const deleteTodo = (id) => {\n    setTodos(todos => todos.filter(todo => todo.id !== id));\n  };\n\n  const handleChangeTitle = (title) => {\n    if (!title) {\n      deleteTodo(item.id);\n    }\n\n    setTodos(todos => todos.map((todo) => {\n      if (todo.id === item.id) {\n        return {\n          ...todo,\n          title,\n        };\n      }\n\n      return todo;\n    }));\n    setEditItem(false);\n    setEditedTodos(title.trim());\n  };\n\n  const handleStatusTodo = (id) => {\n    setTodos(todos => todos\n      .map((todo) => {\n        if (todo.id !== id) {\n          return { ...todo };\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }));\n  };\n\n  const handleKeyboard = ({ key, target }) => {\n    switch (key) {\n      case 'Enter':\n        handleChangeTitle(target.value);\n        setEditedTodos(target.value.trim());\n        setEditItem(false);\n        break;\n\n      case 'Escape':\n        setEditedTodos(item.title);\n        setEditItem(false);\n        break;\n\n      default:\n    }\n  };\n\n  return (\n    <li\n      className={classNames(\n        { completed: item.completed, editing: editItem },\n      )}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={item.completed}\n          onChange={() => handleStatusTodo(item.id)}\n        />\n        <label\n          onDoubleClick={() => setEditItem(true)}\n        >\n          {item.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(item.id)}\n        />\n      </div>\n      {editItem && (\n        <input\n          value={editedTodos}\n          type=\"text\"\n          autoFocus\n          className=\"edit\"\n          onChange={e => setEditedTodos(e.target.value)}\n          onKeyDown={e => handleKeyboard(e)}\n          onBlur={e => handleChangeTitle(e.target.value)}\n        />\n      )}\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\nimport '../../styles/todo-list.css';\n\nexport const TodoList = ({ items, setTodos }) => (\n  <ul className=\"todo-list\">\n    {items.map(item => (\n      <TodoItem\n        item={item}\n        key={item.id}\n        setTodos={setTodos}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport '../../styles/filters.css';\n\nexport const TodosFilter = ({ status, setStatus, FILTERS }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        onClick={() => setStatus(FILTERS.all)}\n        className={classNames(\n          { selected: status === FILTERS.all },\n        )}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        onClick={() => setStatus(FILTERS.active)}\n        className={classNames(\n          { selected: status === FILTERS.active },\n        )}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        onClick={() => setStatus(FILTERS.completed)}\n        className={classNames(\n          { selected: status === FILTERS.completed },\n        )}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  status: PropTypes.string.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  FILTERS: PropTypes.shape({\n    all: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n    completed: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nconst FILTERS = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n\nconst App = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(FILTERS.all);\n  const [toggledAll, setToggledAll] = useState(false);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    setLocalTodos();\n  }, [todos]);\n\n  const setLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n\n    const todoLocal = JSON.parse(localStorage.getItem('todos'));\n\n    setTodos(todoLocal);\n  };\n\n  const addTodo = () => {\n    if (!title.trim()) {\n      return;\n    }\n\n    setTodos(prevTodos => [...prevTodos,\n      {\n        id: uuidv4(),\n        title: title.trim(),\n        completed: false,\n      },\n    ]);\n    setTitle('');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTodo();\n  };\n\n  const filteredTodos = useMemo(() => {\n    switch (status) {\n      case FILTERS.active:\n        return todos.filter(todo => todo.completed === false);\n\n      case FILTERS.completed:\n        return todos.filter(todo => todo.completed === true);\n\n      default:\n        return todos;\n    }\n  }, [status, todos]);\n\n  const completedTodos = todos.filter(todo => todo.completed);\n  const activeTodos = todos.filter(todo => !todo.completed);\n\n  const selectAll = () => {\n    if (todos.some(todo => todo.completed)\n      && todos.some(todo => !todo.completed)) {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        completed: true,\n      })));\n    }\n\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: !toggledAll,\n    })));\n\n    setToggledAll(!toggledAll);\n  };\n\n  const clearCompleted = () => {\n    setTodos(activeTodos);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        </form>\n      </header>\n\n      {todos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              checked={completedTodos.length === todos.length}\n              onChange={selectAll}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <TodoList items={filteredTodos} setTodos={setTodos} />\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {activeTodos.length > 0 && (\n                `${activeTodos.length} todos left`\n              )}\n            </span>\n\n            <TodosFilter\n              setStatus={setStatus}\n              status={status}\n              FILTERS={FILTERS}\n            />\n\n            {completedTodos.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={clearCompleted}\n            >\n              Clear completed\n            </button>\n            )}\n          </footer>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}